{"ast":null,"code":"var _jsxFileName = \"/Users/matthewkiska/Desktop/GA/projects/testapp/cart/src/CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { getItemData, itemsArray } from \"./MenuItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  items: [],\n  getProductQuantity: () => {},\n  addOneToCart: () => {},\n  removeOneFromCart: () => {},\n  deleteFromCart: () => {},\n  getTotalPrice: () => {}\n});\nexport function CartProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cartProducts, setCartProducts] = useState([]);\n  function getProductQuantity(id) {\n    var _cartProducts$find;\n    const quantity = (_cartProducts$find = cartProducts.find(product => product.id === id)) === null || _cartProducts$find === void 0 ? void 0 : _cartProducts$find.quantity;\n    if (quantity === undefined) {\n      return 0;\n    }\n    return quantity;\n  }\n  function addOneToCart(id) {\n    const quantity = getProductQuantity(id);\n    if (quantity === 0) {\n      //product not in cart\n      setCartProducts([...cartProducts, {\n        id: id,\n        quantity: 1\n      }]);\n    } else {\n      //product is in cart\n      setCartProducts(cartProducts.map(product => product.id === id ? {\n        ...product,\n        quantity: product.quantity + 1\n      } : product));\n    }\n  }\n  function removeOneFromCart(id) {\n    const quantity = getProductQuantity(id);\n    if (quantity == 1) {\n      //product is in cart and quantity is 1\n      deleteFromCart(id);\n    } else {\n      //product is in cart and quantity is > 1\n      setCartProducts(cartProducts.map(product => product.id === id ? {\n        ...product,\n        quantity: product.quantity - 1\n      } : product));\n    }\n  }\n  function deleteFromCart(id) {\n    setCartProducts(cartProducts => cartProducts.filter(currentProduct => {\n      return currentProduct.id !== id;\n    }));\n  }\n  function getTotalPrice() {\n    let totalPrice = 0;\n    cartProducts.map(cartItem => {\n      const productData = getProductData(cartItem.id);\n      totalPrice += productData.price * cartItem.quantity;\n    });\n    return totalPrice;\n  }\n  const contextValue = {\n    items: cartProducts,\n    getProductQuantity,\n    addOneToCart,\n    removeOneFromCart,\n    deleteFromCart,\n    getTotalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"U6A359Ie+N1Isul8547a+XNDaDk=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","getItemData","itemsArray","CartContext","items","getProductQuantity","addOneToCart","removeOneFromCart","deleteFromCart","getTotalPrice","CartProvider","children","cartProducts","setCartProducts","id","quantity","find","product","undefined","map","filter","currentProduct","totalPrice","cartItem","productData","getProductData","price","contextValue"],"sources":["/Users/matthewkiska/Desktop/GA/projects/testapp/cart/src/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\"\nimport { getItemData, itemsArray } from \"./MenuItems\"\n\nexport const CartContext = createContext({\n    items: [],\n    getProductQuantity: () => {},\n    addOneToCart: () => {},\n    removeOneFromCart: () => {},\n    deleteFromCart: () => {},\n    getTotalPrice: () => {},\n})\n\nexport function CartProvider({ children }) {\n\n    const [cartProducts, setCartProducts] = useState([])\n\n    function getProductQuantity(id) {\n        const quantity = cartProducts.find(product => product.id === id)?.quantity\n\n        if (quantity === undefined) {\n            return 0\n        } \n\n        return quantity;\n    }\n\n    function addOneToCart(id) {\n        const quantity = getProductQuantity(id)\n\n        if (quantity === 0) { //product not in cart\n            setCartProducts(\n                [\n                    ...cartProducts,\n                    {\n                        id: id,\n                        quantity: 1,\n                    }\n                ]\n            )\n        } else { //product is in cart\n            setCartProducts(\n                cartProducts.map(\n                    product =>\n                    product.id === id\n                    ? { ...product, quantity: product.quantity + 1 }\n                    : product\n                )\n            )\n        }\n    }\n\n    function removeOneFromCart(id) {\n        const quantity = getProductQuantity(id)\n\n        if (quantity == 1) { //product is in cart and quantity is 1\n            deleteFromCart(id)\n        } else { //product is in cart and quantity is > 1\n            setCartProducts(\n                cartProducts.map(\n                    product =>\n                    product.id === id\n                    ? { ...product, quantity: product.quantity - 1 }\n                    : product\n                )\n            )\n        }\n    }\n\n\n    function deleteFromCart(id) {\n        setCartProducts(\n            cartProducts =>\n            cartProducts.filter(currentProduct => {\n                return currentProduct.id !== id\n            })\n        )\n    }\n\n    function getTotalPrice() {\n        let totalPrice = 0\n        cartProducts.map((cartItem) => {\n            const productData = getProductData(cartItem.id)\n            totalPrice += (productData.price * cartItem.quantity)\n        })\n        return totalPrice\n    }\n\n    const contextValue = {\n        items: cartProducts,\n        getProductQuantity,\n        addOneToCart,\n        removeOneFromCart,\n        deleteFromCart,\n        getTotalPrice,\n    }\n\n    return (\n        <CartContext.Provider value={contextValue}>\n            {children}\n        </CartContext.Provider>\n    )\n}\n\nexport default CartProvider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}